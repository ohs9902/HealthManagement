{"ast":null,"code":"var _jsxFileName = \"/Users/ohyeongseog/Desktop/HealthMangement/Client/client/src/component/WeightChange.js\",\n  _s = $RefreshSig$();\nimport axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport ReactApexChart from 'react-apexcharts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeightChange() {\n  _s();\n  const [weights, setWeights] = useState(null);\n  const userId = localStorage.getItem('userId');\n  useEffect(() => {\n    axios.post('http://localhost:4000/api/weight_list', {\n      id: userId\n    }).then(weightList => {\n      setWeights(weightList.data);\n      console.log(weightList.data);\n    });\n  }, []);\n  if (weights) {\n    const data = weights.map(weight => weight.weight);\n    const dates = weights.map(weight => weight.date);\n  }\n  const series = [{\n    name: \"Desktops\",\n    data: data\n  }];\n  const options = {\n    chart: {\n      height: 350,\n      type: 'line',\n      zoom: {\n        enabled: false\n      }\n    },\n    dataLabels: {\n      enabled: false\n    },\n    stroke: {\n      curve: 'straight'\n    },\n    title: {\n      text: 'Product Trends by Month',\n      align: 'left'\n    },\n    grid: {\n      row: {\n        colors: ['#f3f3f3', 'transparent'],\n        // takes an array which will be repeated on columns\n        opacity: 0.5\n      }\n    },\n    xaxis: {\n      categories: dates\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"apple\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ReactApexChart, {\n      options: options,\n      series: series,\n      type: \"line\",\n      height: 350\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 9\n  }, this);\n}\n_s(WeightChange, \"/nnM60ejnv81P6xrpUSpVklRbRg=\");\n_c = WeightChange;\nvar _c;\n$RefreshReg$(_c, \"WeightChange\");","map":{"version":3,"names":["axios","useEffect","useState","ReactApexChart","jsxDEV","_jsxDEV","WeightChange","_s","weights","setWeights","userId","localStorage","getItem","post","id","then","weightList","data","console","log","map","weight","dates","date","series","name","options","chart","height","type","zoom","enabled","dataLabels","stroke","curve","title","text","align","grid","row","colors","opacity","xaxis","categories","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/ohyeongseog/Desktop/HealthMangement/Client/client/src/component/WeightChange.js"],"sourcesContent":["import axios from 'axios';\nimport { useEffect, useState } from 'react';\nimport ReactApexChart from 'react-apexcharts'\n\nexport default function WeightChange()\n{\n    const [weights,setWeights] = useState(null);\n\n    const userId = localStorage.getItem('userId');\n\n    useEffect(()=>{\n        axios.post('http://localhost:4000/api/weight_list',{\n            id:userId\n        })\n        .then((weightList)=>{\n            setWeights(weightList.data);\n            console.log(weightList.data);\n        })\n    },[])\n\n    if(weights){\n        const data = weights.map((weight)=> weight.weight);\n        const dates = weights.map((weight)=> weight.date);\n    }\n\n    const series= [{\n        name: \"Desktops\",\n        data: data\n    }];\n\n    const options= {\n      chart: {\n        height: 350,\n        type: 'line',\n        zoom: {\n          enabled: false\n        }\n      },\n      dataLabels: {\n        enabled: false\n      },\n      stroke: {\n        curve: 'straight'\n      },\n      title: {\n        text: 'Product Trends by Month',\n        align: 'left'\n      },\n      grid: {\n        row: {\n          colors: ['#f3f3f3', 'transparent'], // takes an array which will be repeated on columns\n          opacity: 0.5\n        },\n      },\n      xaxis: {\n        categories: dates,\n      }\n\n    };\n\n    return (\n        <div>\n            <p>apple</p>\n            <ReactApexChart options={options} series={series} type=\"line\" height={350} />\n        </div>\n       \n    );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAC3C,OAAOC,cAAc,MAAM,kBAAkB;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAE7C,eAAe,SAASC,YAAYA,CAAA,EACpC;EAAAC,EAAA;EACI,MAAM,CAACC,OAAO,EAACC,UAAU,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE3C,MAAMQ,MAAM,GAAGC,YAAY,CAACC,OAAO,CAAC,QAAQ,CAAC;EAE7CX,SAAS,CAAC,MAAI;IACVD,KAAK,CAACa,IAAI,CAAC,uCAAuC,EAAC;MAC/CC,EAAE,EAACJ;IACP,CAAC,CAAC,CACDK,IAAI,CAAEC,UAAU,IAAG;MAChBP,UAAU,CAACO,UAAU,CAACC,IAAI,CAAC;MAC3BC,OAAO,CAACC,GAAG,CAACH,UAAU,CAACC,IAAI,CAAC;IAChC,CAAC,CAAC;EACN,CAAC,EAAC,EAAE,CAAC;EAEL,IAAGT,OAAO,EAAC;IACP,MAAMS,IAAI,GAAGT,OAAO,CAACY,GAAG,CAAEC,MAAM,IAAIA,MAAM,CAACA,MAAM,CAAC;IAClD,MAAMC,KAAK,GAAGd,OAAO,CAACY,GAAG,CAAEC,MAAM,IAAIA,MAAM,CAACE,IAAI,CAAC;EACrD;EAEA,MAAMC,MAAM,GAAE,CAAC;IACXC,IAAI,EAAE,UAAU;IAChBR,IAAI,EAAEA;EACV,CAAC,CAAC;EAEF,MAAMS,OAAO,GAAE;IACbC,KAAK,EAAE;MACLC,MAAM,EAAE,GAAG;MACXC,IAAI,EAAE,MAAM;MACZC,IAAI,EAAE;QACJC,OAAO,EAAE;MACX;IACF,CAAC;IACDC,UAAU,EAAE;MACVD,OAAO,EAAE;IACX,CAAC;IACDE,MAAM,EAAE;MACNC,KAAK,EAAE;IACT,CAAC;IACDC,KAAK,EAAE;MACLC,IAAI,EAAE,yBAAyB;MAC/BC,KAAK,EAAE;IACT,CAAC;IACDC,IAAI,EAAE;MACJC,GAAG,EAAE;QACHC,MAAM,EAAE,CAAC,SAAS,EAAE,aAAa,CAAC;QAAE;QACpCC,OAAO,EAAE;MACX;IACF,CAAC;IACDC,KAAK,EAAE;MACLC,UAAU,EAAErB;IACd;EAEF,CAAC;EAED,oBACIjB,OAAA;IAAAuC,QAAA,gBACIvC,OAAA;MAAAuC,QAAA,EAAG;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAI,eACZ3C,OAAA,CAACF,cAAc;MAACuB,OAAO,EAAEA,OAAQ;MAACF,MAAM,EAAEA,MAAO;MAACK,IAAI,EAAC,MAAM;MAACD,MAAM,EAAE;IAAI;MAAAiB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC3E;AAGd;AAACzC,EAAA,CA/DuBD,YAAY;AAAA2C,EAAA,GAAZ3C,YAAY;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}