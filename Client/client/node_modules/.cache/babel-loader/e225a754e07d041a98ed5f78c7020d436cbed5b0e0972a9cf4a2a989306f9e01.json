{"ast":null,"code":"var _jsxFileName = \"/Users/ohyeongseog/Desktop/HealthMangement/Client/client/src/component/Diet.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"../diet.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Diet() {\n  _s();\n  const now = new Date();\n  const today = now.toISOString().split('T')[0];\n  const userId = localStorage.getItem('userId');\n  const [breakfasts, setBreakfasts] = useState([]);\n  const [lunchs, setLunchs] = useState([]);\n  const [dinners, setDinners] = useState([]);\n  const [totalK, setTotalK] = useState(null);\n  useEffect(() => {\n    axios.post('http://localhost:4000/api/breakfast_list', {\n      meal_time: 'breakfast',\n      date: today\n    }).then(food_list => {\n      setBreakfasts(food_list.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.post('http://localhost:4000/api/breakfast_list', {\n      meal_time: 'lunch',\n      date: today\n    }).then(food_list => {\n      setLunchs(food_list.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.post('http://localhost:4000/api/breakfast_list', {\n      meal_time: 'dinner',\n      date: today\n    }).then(food_list => {\n      setDinners(food_list.data);\n    });\n  }, []);\n  useEffect(() => {\n    totalKcl();\n  }, [breakfasts, lunchs, dinners]);\n  function totalKcl() {\n    let totalkcl = 0;\n    breakfasts.forEach(food => {\n      totalkcl += food.kcl;\n    });\n    lunchs.forEach(food => {\n      totalkcl += food.kcl;\n    });\n    dinners.forEach(food => {\n      totalkcl += food.kcl;\n    });\n    setTotalK(totalkcl);\n  }\n  function deleteFood(food_name, meal_time) {\n    axios.post('http://localhost:4000/api/diet_delete', {\n      user_id: userId,\n      meal_time: 'breakfast',\n      food: food_name,\n      date: today\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"\\uCD1D \\uC12D\\uCDE8 \\uCE7C\\uB85C\\uB9AC:\", totalK, \"kcal\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: styles.meal_time,\n        to: \"/id/\" + userId + \"/diet/breakfast\",\n        children: \"\\uC544\\uCE68\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: breakfasts.map(food => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uC2DD\\uD488\\uBA85:\", food.food, \",\\uC2DD\\uD488\\uC885\\uB958:\", food.food_type, \",\\uCE7C\\uB85C\\uB9AC:\", food.kcl, \"kcal,\\uB2E8\\uBC31\\uC9C8:\", food.protein, \"g,\", \"\", \", \\uC9C0\\uBC29:\", food.fat, \"g,\\uD0C4\\uC218\\uD654\\uBB3C:\", food.carbo, \"g,\\uC81C\\uACF5\\uB7C9:\", food.serving_size, \"g\", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => deleteFood(food.food, food.meal_time),\n            children: \"\\uC0AD\\uC81C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 79\n          }, this)]\n        }, food.food, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: styles.meal_time,\n        to: \"/id/\" + userId + \"/diet/lunch\",\n        children: \"\\uC810\\uC2EC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: lunchs.map(food => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uC2DD\\uD488\\uBA85:\", food.food, \",\\uC2DD\\uD488\\uC885\\uB958:\", food.food_type, \",\\uCE7C\\uB85C\\uB9AC:\", food.kcl, \"kcal,\\uB2E8\\uBC31\\uC9C8:\", food.protein, \"g,\", \"\", \", \\uC9C0\\uBC29:\", food.fat, \"g,\\uD0C4\\uC218\\uD654\\uBB3C:\", food.carbo, \"g,\\uC81C\\uACF5\\uB7C9:\", food.serving_size, \"g\"]\n        }, food.food, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: styles.meal_time,\n        to: \"/id/\" + userId + \"/diet/dinner\",\n        children: \"\\uC800\\uB141\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dinners.map(food => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uC2DD\\uD488\\uBA85:\", food.food, \",\\uC2DD\\uD488\\uC885\\uB958:\", food.food_type, \",\\uCE7C\\uB85C\\uB9AC:\", food.kcl, \"kcal,\\uB2E8\\uBC31\\uC9C8:\", food.protein, \"g,\", \"\", \", \\uC9C0\\uBC29:\", food.fat, \"g,\\uD0C4\\uC218\\uD654\\uBB3C:\", food.carbo, \"g,\\uC81C\\uACF5\\uB7C9:\", food.serving_size, \"g\"]\n        }, food.food, true, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 21\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 9\n  }, this);\n}\n_s(Diet, \"hHOgEBTJfcuSfrnCcU6H91K56Ao=\");\n_c = Diet;\nvar _c;\n$RefreshReg$(_c, \"Diet\");","map":{"version":3,"names":["axios","useEffect","useState","Link","styles","jsxDEV","_jsxDEV","Diet","_s","now","Date","today","toISOString","split","userId","localStorage","getItem","breakfasts","setBreakfasts","lunchs","setLunchs","dinners","setDinners","totalK","setTotalK","post","meal_time","date","then","food_list","data","totalKcl","totalkcl","forEach","food","kcl","deleteFood","food_name","user_id","children","fileName","_jsxFileName","lineNumber","columnNumber","className","to","map","food_type","protein","fat","carbo","serving_size","onClick","_c","$RefreshReg$"],"sources":["/Users/ohyeongseog/Desktop/HealthMangement/Client/client/src/component/Diet.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"../diet.module.css\";\nexport default function Diet()\n{\n    const now = new Date();\n    const today =now.toISOString().split('T')[0];\n    const userId=localStorage.getItem('userId');\n    const [breakfasts,setBreakfasts] = useState([]);\n    const [lunchs,setLunchs] = useState([]);\n    const [dinners,setDinners] = useState([]);\n    const [totalK,setTotalK] = useState(null);\n    useEffect(()=>{\n        axios.post('http://localhost:4000/api/breakfast_list',{\n            meal_time:'breakfast',\n            date:today\n        }).then((food_list)=>{\n            setBreakfasts(food_list.data);\n        })\n    },[]);\n\n    useEffect(()=>{\n        axios.post('http://localhost:4000/api/breakfast_list',{\n            meal_time:'lunch',\n            date:today\n        }).then((food_list)=>{\n            setLunchs(food_list.data);\n        })\n    },[]);\n\n    useEffect(()=>{\n        axios.post('http://localhost:4000/api/breakfast_list',{\n            meal_time:'dinner',\n            date:today\n        }).then((food_list)=>{\n            setDinners(food_list.data);\n        })\n    },[]);\n\n    useEffect(()=>{\n        totalKcl();\n    },[breakfasts,lunchs,dinners]);\n    function totalKcl(){\n        let totalkcl = 0;\n        breakfasts.forEach((food)=>{\n            totalkcl +=food.kcl;\n        });\n        lunchs.forEach((food)=>{\n            totalkcl +=food.kcl;\n        });\n        dinners.forEach((food)=>{\n            totalkcl +=food.kcl;\n        });\n        setTotalK(totalkcl);\n    }\n    function deleteFood(food_name,meal_time)\n    {\n        axios.post('http://localhost:4000/api/diet_delete',{\n            user_id:userId,\n            meal_time:'breakfast',\n            food:food_name,\n            date:today\n        })\n    }\n\n    return (\n        <div>\n            <p>총 섭취 칼로리:{totalK}kcal</p>\n            <p><Link className ={styles.meal_time}to={\"/id/\"+userId+\"/diet/breakfast\"}>아침</Link></p>\n            <ul>\n                {breakfasts.map((food)=>{\n                    \n                    return(\n                    <li key={food.food}>\n                    식품명:{food.food},식품종류:{food.food_type},칼로리:{food.kcl}kcal,단백질:{food.protein}g,{\"\"},\n                    지방:{food.fat}g,탄수화물:{food.carbo}g,제공량:{food.serving_size}g<button onClick={()=>deleteFood(food.food,food.meal_time)}>삭제</button>\n                    </li>\n                )})\n\n                }\n            </ul>\n            <p><Link className={styles.meal_time} to={\"/id/\"+userId+\"/diet/lunch\"}>점심</Link></p>\n            <ul>\n                {lunchs.map((food)=>{\n                    \n                    return(\n                    <li key={food.food}>\n                    식품명:{food.food},식품종류:{food.food_type},칼로리:{food.kcl}kcal,단백질:{food.protein}g,{\"\"},\n                    지방:{food.fat}g,탄수화물:{food.carbo}g,제공량:{food.serving_size}g\n                    </li>\n                )})\n                }\n            </ul>   \n            <p><Link className={styles.meal_time} to={\"/id/\"+userId+\"/diet/dinner\"}>저녁</Link></p>\n            <ul>\n                {dinners.map((food)=>{\n                    \n                    return(\n                    <li key={food.food}>\n                    식품명:{food.food},식품종류:{food.food_type},칼로리:{food.kcl}kcal,단백질:{food.protein}g,{\"\"},\n                    지방:{food.fat}g,탄수화물:{food.carbo}g,제공량:{food.serving_size}g\n                    </li>\n                )})\n                }\n            </ul>   \n        </div>\n    );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}