{"ast":null,"code":"var _jsxFileName = \"/Users/ohyeongseog/Desktop/HealthMangement/Client/client/src/component/Diet.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"../diet.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Diet() {\n  _s();\n  const now = new Date();\n  const today = now.toISOString().split('T')[0];\n  const userId = localStorage.getItem('userId');\n  const [breakfasts, setBreakfasts] = useState([]);\n  const [lunchs, setLunchs] = useState([]);\n  const [dinners, setDinners] = useState([]);\n  useEffect(() => {\n    axios.post('http://localhost:4000/api/breakfast_list', {\n      meal_time: 'breakfast',\n      date: today\n    }).then(food_list => {\n      setBreakfasts(food_list.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.post('http://localhost:4000/api/breakfast_list', {\n      meal_time: 'lunch',\n      date: today\n    }).then(food_list => {\n      setLunchs(food_list.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.post('http://localhost:4000/api/breakfast_list', {\n      meal_time: 'dinner',\n      date: today\n    }).then(food_list => {\n      serDinners(food_list.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: styles.meal_time,\n        to: \"/id/\" + userId + \"/diet/breakfast\",\n        children: \"\\uC544\\uCE68\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: breakfasts.map(food => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"\\uC2DD\\uD488\\uBA85:\", food.food, \",\\uC2DD\\uD488\\uC885\\uB958:\", food.food_type, \",\\uCE7C\\uB85C\\uB9AC:\", food.kcl, \"kcal,\\uB2E8\\uBC31\\uC9C8:\", food.protein, \"g,\", \"\", \", \\uC9C0\\uBC29:\", food.fat, \"g,\\uD0C4\\uC218\\uD654\\uBB3C:\", food.carbo, \"g,\\uC81C\\uACF5\\uB7C9:\", food.serving_size, \"g\"]\n      }, food.food, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: styles.meal_time,\n        to: \"/id/\" + userId + \"/diet/lunch\",\n        children: \"\\uC810\\uC2EC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: lunchs.map(food => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"\\uC2DD\\uD488\\uBA85:\", food.food, \",\\uC2DD\\uD488\\uC885\\uB958:\", food.food_type, \",\\uCE7C\\uB85C\\uB9AC:\", food.kcl, \"kcal,\\uB2E8\\uBC31\\uC9C8:\", food.protein, \"g,\", \"\", \", \\uC9C0\\uBC29:\", food.fat, \"g,\\uD0C4\\uC218\\uD654\\uBB3C:\", food.carbo, \"g,\\uC81C\\uACF5\\uB7C9:\", food.serving_size, \"g\"]\n      }, food.food, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        className: styles.meal_time,\n        to: \"/id/\" + userId + \"/diet/dinner\",\n        children: \"\\uC800\\uB141\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 16\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: dinners.map(food => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [\"\\uC2DD\\uD488\\uBA85:\", food.food, \",\\uC2DD\\uD488\\uC885\\uB958:\", food.food_type, \",\\uCE7C\\uB85C\\uB9AC:\", food.kcl, \"kcal,\\uB2E8\\uBC31\\uC9C8:\", food.protein, \"g,\", \"\", \", \\uC9C0\\uBC29:\", food.fat, \"g,\\uD0C4\\uC218\\uD654\\uBB3C:\", food.carbo, \"g,\\uC81C\\uACF5\\uB7C9:\", food.serving_size, \"g\"]\n      }, food.food, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 9\n  }, this);\n}\n_s(Diet, \"+re5FQEv3xpL+/mVwZArtgX+GUw=\");\n_c = Diet;\nvar _c;\n$RefreshReg$(_c, \"Diet\");","map":{"version":3,"names":["axios","useEffect","useState","Link","styles","jsxDEV","_jsxDEV","Diet","_s","now","Date","today","toISOString","split","userId","localStorage","getItem","breakfasts","setBreakfasts","lunchs","setLunchs","dinners","setDinners","post","meal_time","date","then","food_list","data","serDinners","children","className","to","fileName","_jsxFileName","lineNumber","columnNumber","map","food","food_type","kcl","protein","fat","carbo","serving_size","_c","$RefreshReg$"],"sources":["/Users/ohyeongseog/Desktop/HealthMangement/Client/client/src/component/Diet.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport styles from \"../diet.module.css\";\nexport default function Diet()\n{\n    const now = new Date();\n    const today =now.toISOString().split('T')[0];\n    const userId=localStorage.getItem('userId');\n    const [breakfasts,setBreakfasts] = useState([]);\n    const [lunchs,setLunchs] = useState([]);\n    const [dinners,setDinners] = useState([]);\n\n    useEffect(()=>{\n        axios.post('http://localhost:4000/api/breakfast_list',{\n            meal_time:'breakfast',\n            date:today\n        }).then((food_list)=>{\n            setBreakfasts(food_list.data);\n        })\n    },[]);\n\n    useEffect(()=>{\n        axios.post('http://localhost:4000/api/breakfast_list',{\n            meal_time:'lunch',\n            date:today\n        }).then((food_list)=>{\n            setLunchs(food_list.data);\n        })\n    },[]);\n\n    useEffect(()=>{\n        axios.post('http://localhost:4000/api/breakfast_list',{\n            meal_time:'dinner',\n            date:today\n        }).then((food_list)=>{\n            serDinners(food_list.data);\n        })\n    },[]);\n\n    return (\n        <div>\n            <p><Link className ={styles.meal_time}to={\"/id/\"+userId+\"/diet/breakfast\"}>아침</Link></p>\n            <ul>\n                {breakfasts.map((food)=>(\n                    <li key={food.food}>\n                    식품명:{food.food},식품종류:{food.food_type},칼로리:{food.kcl}kcal,단백질:{food.protein}g,{\"\"},\n                    지방:{food.fat}g,탄수화물:{food.carbo}g,제공량:{food.serving_size}g\n                    </li>\n                ))\n\n                }\n            </ul>\n            <p><Link className={styles.meal_time} to={\"/id/\"+userId+\"/diet/lunch\"}>점심</Link></p>\n            <ul>\n                {lunchs.map((food)=>(\n                    <li key={food.food}>\n                    식품명:{food.food},식품종류:{food.food_type},칼로리:{food.kcl}kcal,단백질:{food.protein}g,{\"\"},\n                    지방:{food.fat}g,탄수화물:{food.carbo}g,제공량:{food.serving_size}g\n                    </li>\n                ))\n\n                }\n            </ul>   \n            <p><Link className={styles.meal_time} to={\"/id/\"+userId+\"/diet/dinner\"}>저녁</Link></p>\n            <ul>\n                {dinners.map((food)=>(\n                    <li key={food.food}>\n                    식품명:{food.food},식품종류:{food.food_type},칼로리:{food.kcl}kcal,단백질:{food.protein}g,{\"\"},\n                    지방:{food.fat}g,탄수화물:{food.carbo}g,제공량:{food.serving_size}g\n                    </li>\n                ))\n\n                }\n            </ul>   \n        </div>\n    );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}