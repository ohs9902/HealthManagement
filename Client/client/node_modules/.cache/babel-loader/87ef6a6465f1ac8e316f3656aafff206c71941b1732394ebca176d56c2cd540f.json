{"ast":null,"code":"var _jsxFileName = \"/Users/ohyeongseog/Desktop/HealthMangement/Client/client/src/component/Food.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport styles from \"../food.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Food() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const nav = useNavigate();\n  const {\n    meal_time\n  } = useParams();\n  const searchRef = useRef(null);\n  const servingRef = useRef(null);\n  const userId = localStorage.getItem('userId');\n  const [today, setToday] = useState('');\n  useEffect(() => {\n    const timeId = setInterval(() => {\n      setToday(new Date().toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      }).replace(/\\./g, '-').split(' ').join(\"\").slice(0, -1));\n    }, 1000);\n    return () => clearInterval(timeId);\n  }, []);\n  function searchFood(e) {\n    e.preventDefault();\n    axios.post('http://localhost:4000/api/food_search', {\n      search: '%' + searchRef.current.value + '%'\n    }).then(food => {\n      setSearchResults(food.data);\n    });\n    searchRef.current.value = '';\n    setSearchResults([]);\n  }\n  function inputBreakfast(foodData, serving_size) {\n    console.log(serving_size);\n    const changeServing = {\n      carbo: foodData.carbo / 100 * serving_size,\n      protein: foodData.protein / 100 * serving_size,\n      fat: foodData.fat / 100 * serving_size,\n      kcal: foodData.kcal / 100 * serving_size\n    };\n    axios.post('http://localhost:4000/api/food', {\n      user_id: userId,\n      meal_time: meal_time,\n      food: foodData.food_name,\n      food_type: foodData.food_type,\n      serving_size: serving_size,\n      kcl: changeServing.kcal,\n      carbo: changeServing.carbo,\n      protein: changeServing.protein,\n      fat: changeServing.fat,\n      date: today\n    }).then(() => {\n      alert('식사가 등록되었습니다.칼로리');\n      nav(-1);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: today\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchFood,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC74C\\uC2DD \\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          ref: searchRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), searchResults.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map(food => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.food_list,\n          children: [\"\\uC2DD\\uD488\\uBA85:\", food.food_name, \",\\uC2DD\\uD488\\uC885\\uB958:\", food.food_type, \",\\uCE7C\\uB85C\\uB9AC:\", food.kcal, \"kcal,\\uB2E8\\uBC31\\uC9C8:\", food.protein, \"g,\", \"\", \", \\uC9C0\\uBC29:\", food.fat, \"g,\\uD0C4\\uC218\\uD654\\uBB3C:\", food.carbo, \"g,\\uC81C\\uACF5\\uB7C9:\", food.serving_size, \"g\", /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"number\",\n            placeholder: \"\\uC81C\\uACF5\\uB7C9\",\n            ref: servingRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => {\n              const servingSize = parseInt(servingRef.current.value);\n              if (isNaN(servingSize) || servingSize === 0) {\n                alert(\"제공량을 입력하세요.\");\n                return;\n              }\n              inputBreakfast(food, servingSize);\n            },\n            children: \"\\uB4F1\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 29\n          }, this)]\n        }, food.food_name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uC74C\\uC2DD\\uC744 \\uAC80\\uC0C9\\uD558\\uC138\\uC694.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 14\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(Food, \"nBUGEvfNqnLil7vH+oDJhBoHezs=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Food;\nvar _c;\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"names":["axios","useEffect","useRef","useState","useNavigate","useParams","styles","jsxDEV","_jsxDEV","Food","_s","searchResults","setSearchResults","nav","meal_time","searchRef","servingRef","userId","localStorage","getItem","today","setToday","timeId","setInterval","Date","toLocaleDateString","year","month","day","replace","split","join","slice","clearInterval","searchFood","e","preventDefault","post","search","current","value","then","food","data","inputBreakfast","foodData","serving_size","console","log","changeServing","carbo","protein","fat","kcal","user_id","food_name","food_type","kcl","date","alert","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","ref","length","map","className","food_list","placeholder","onClick","servingSize","parseInt","isNaN","_c","$RefreshReg$"],"sources":["/Users/ohyeongseog/Desktop/HealthMangement/Client/client/src/component/Food.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport styles from \"../food.module.css\";\n\nexport default function Food()\n{\n    const [searchResults,setSearchResults] = useState([]);\n    const nav = useNavigate();\n    const {meal_time} = useParams();\n    const searchRef = useRef(null);\n    const servingRef = useRef(null);\n    const userId=localStorage.getItem('userId');\n    const [today,setToday] = useState('');\n\n    useEffect(()=>{\n        const timeId = setInterval(()=>{\n            setToday(new Date().toLocaleDateString('ko-KR',{year:'numeric',month:'2-digit',day:'2-digit'}).replace(/\\./g,'-').split(' ').join(\"\").slice(0,-1));\n        },1000);\n        return (()=> clearInterval(timeId));\n    },[]);\n\n    function searchFood(e)\n    {\n        e.preventDefault();\n        axios.post('http://localhost:4000/api/food_search',{\n            search:'%'+searchRef.current.value+'%'\n        }).then((food)=>{\n            setSearchResults(food.data);\n        });\n        searchRef.current.value ='';\n        setSearchResults([]);\n    }\n\n    function inputBreakfast(foodData,serving_size)\n    {\n        console.log(serving_size);\n        const changeServing ={\n            carbo:(foodData.carbo/100)*serving_size,\n            protein:(foodData.protein/100)*serving_size,\n            fat:(foodData.fat/100)*serving_size,\n            kcal:(foodData.kcal/100)*serving_size\n        };\n        axios.post('http://localhost:4000/api/food',{\n            user_id:userId,\n            meal_time:meal_time,\n            food:foodData.food_name,\n            food_type:foodData.food_type,\n            serving_size:serving_size,\n            kcl:changeServing.kcal,\n            carbo:changeServing.carbo,\n            protein:changeServing.protein,   \n            fat:changeServing.fat,\n            date:today \n        }).then(()=>{\n            alert('식사가 등록되었습니다.칼로리');\n            nav(-1);\n        }).catch((err)=>\n        {\n            console.log(err);\n        }\n        )\n    }\n    return(\n        <div>\n            <p>{today}</p>\n            <form onSubmit={searchFood}>\n                <label>음식 검색</label>\n                <p><input type=\"search\" ref={searchRef}/><button>검색</button></p>\n            </form>\n\n            {searchResults.length>0 ?(\n                <ul>\n                {searchResults.map((food)=>{\n                    return(\n                        <li className={styles.food_list} key={food.food_name}>\n                            식품명:{food.food_name},식품종류:{food.food_type},칼로리:{food.kcal}kcal,단백질:{food.protein}g,{\"\"},\n                            지방:{food.fat}g,탄수화물:{food.carbo}g,제공량:{food.serving_size}g \n                            <input type=\"number\" placeholder=\"제공량\" ref={servingRef}/>\n                            <button onClick={()=>{\n                                const servingSize = parseInt(servingRef.current.value);\n                                if(isNaN(servingSize) ||servingSize===0){\n                                    alert(\"제공량을 입력하세요.\");\n                                    return; \n                                }\n                                inputBreakfast(food,servingSize);\n                            }}>등록</button>\n                        </li>\n                    )\n                })} \n            </ul>\n            ):\n            (\n             <p>음식을 검색하세요.</p>   \n            )\n            }\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}