{"ast":null,"code":"var _jsxFileName = \"/Users/ohyeongseog/Desktop/HealthMangement/Client/client/src/component/DietDetail.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DietDetail() {\n  _s();\n  const userId = localStorage.getItem('userId');\n  const {\n    date\n  } = useParams();\n  const [breakfasts, setBreakfasts] = useState([]);\n  const [lunchs, setLunchs] = useState([]);\n  const [dinners, setDinners] = useState([]);\n  useEffect(() => {\n    axios.post('http://localhost:4000/api/diet_detail', {\n      id: userId,\n      meal_time: \"breakfast\",\n      date: date\n    }).then(diet => {\n      setBreakfasts(diet.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.post('http://localhost:4000/api/diet_detail', {\n      id: userId,\n      meal_time: \"lunch\",\n      date: date\n    }).then(diet => {\n      setLunchs(diet.data);\n    });\n  }, []);\n  useEffect(() => {\n    axios.post('http://localhost:4000/api/diet_detail', {\n      id: userId,\n      meal_time: \"dinner\",\n      date: date\n    }).then(diet => {\n      setDinners(diet.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: date\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this), diets.length > 0 ? /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: diets.map(diet => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"\\uC2DD\\uC0AC\\uC2DC\\uAC04:\", diet.meal_time, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 33\n          }, this), \"\\uC2DD\\uD488\\uBA85:\", diet.food, \",\\uC2DD\\uD488\\uC885\\uB958:\", diet.food_type, \",\\uCE7C\\uB85C\\uB9AC:\", parseInt(diet.kcl), \"kcal,\\uB2E8\\uBC31\\uC9C8:\", parseInt(diet.protein), \"g\", \"\", \", \\uC9C0\\uBC29:\", parseInt(diet.fat), \"g,\\uD0C4\\uC218\\uD654\\uBB3C:\", parseInt(diet.carbo), \"g,\\uC12D\\uCDE8\\uB7C9:\", parseInt(diet.serving_size), \"g\"]\n        }, diet.diet_num, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 29\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 17\n    }, this) : /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\uAE30\\uB85D\\uB41C \\uC2DD\\uB2E8\\uC774 \\uC5C6\\uC2B5\\uB2C8\\uB2E4.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n}\n_s(DietDetail, \"lP7BW2DiD/KfsJeRiq3xMfnBP90=\", false, function () {\n  return [useParams];\n});\n_c = DietDetail;\nvar _c;\n$RefreshReg$(_c, \"DietDetail\");","map":{"version":3,"names":["axios","useEffect","useState","useParams","jsxDEV","_jsxDEV","DietDetail","_s","userId","localStorage","getItem","date","breakfasts","setBreakfasts","lunchs","setLunchs","dinners","setDinners","post","id","meal_time","then","diet","data","children","fileName","_jsxFileName","lineNumber","columnNumber","diets","length","map","food","food_type","parseInt","kcl","protein","fat","carbo","serving_size","diet_num","_c","$RefreshReg$"],"sources":["/Users/ohyeongseog/Desktop/HealthMangement/Client/client/src/component/DietDetail.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\n\nexport default function DietDetail()\n{\n    const userId = localStorage.getItem('userId');\n    const {date} = useParams();\n    const [breakfasts,setBreakfasts] = useState([]);\n    const [lunchs,setLunchs] = useState([]);\n    const [dinners,setDinners] = useState([]);\n    useEffect(()=>{\n        axios.post('http://localhost:4000/api/diet_detail',{\n            id:userId,\n            meal_time:\"breakfast\",\n            date:date\n        })\n        .then((diet)=>{\n            setBreakfasts(diet.data);\n        })\n    },[])\n\n    useEffect(()=>{\n        axios.post('http://localhost:4000/api/diet_detail',{\n            id:userId,\n            meal_time:\"lunch\",\n            date:date\n        })\n        .then((diet)=>{\n            setLunchs(diet.data);\n        })\n    },[])\n\n    useEffect(()=>{\n        axios.post('http://localhost:4000/api/diet_detail',{\n            id:userId,\n            meal_time:\"dinner\",\n            date:date\n        })\n        .then((diet)=>{\n            setDinners(diet.data);\n        })\n    },[])\n   \n\n    return(\n        <div>\n            <p>{date}</p>\n            {diets.length>0 ?(\n                <ul>\n                    {diets.map((diet)=>{\n                        return(\n                            <li key={diet.diet_num}>\n                                식사시간:{diet.meal_time}\n                                <br/>\n                                식품명:{diet.food},식품종류:{diet.food_type},칼로리:{parseInt(diet.kcl)}kcal,단백질:{parseInt(diet.protein)}g{\"\"},\n                            지방:{parseInt(diet.fat)}g,탄수화물:{parseInt(diet.carbo)}g,섭취량:{parseInt(diet.serving_size)}g\n                            </li>\n                        );\n                    })\n                    }\n                </ul>\n            ):(\n                <p>기록된 식단이 없습니다.</p>\n            )\n\n            }\n            \n            \n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}