{"ast":null,"code":"var _jsxFileName = \"/Users/ohyeongseog/Desktop/HealthMangement/Client/client/src/component/Food.js\",\n  _s = $RefreshSig$();\nimport axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport styles from \"../food.module.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Food() {\n  _s();\n  const [searchResults, setSearchResults] = useState([]);\n  const nav = useNavigate();\n  const {\n    meal_time\n  } = useParams();\n  const searchRef = useRef(null);\n  const foodRef = useRef(null);\n  const gRef = useRef(null);\n  const kclRef = useRef(null);\n  const carboRef = useRef(null);\n  const proteinRef = useRef(null);\n  const fatRef = useRef(null);\n  const userId = localStorage.getItem('userId');\n  const [today, setToday] = useState('');\n  useEffect(() => {\n    const timeId = setInterval(() => {\n      setToday(new Date().toLocaleDateString('ko-KR', {\n        year: 'numeric',\n        month: '2-digit',\n        day: '2-digit'\n      }).replace(/\\./g, '-').pop());\n    }, 1000);\n    return () => clearInterval(timeId);\n  }, []);\n  function searchFood(e) {\n    e.preventDefault();\n    axios.post('http://localhost:4000/api/food_search', {\n      search: '%' + searchRef.current.value + '%'\n    }).then(food => {\n      console.log(food);\n      setSearchResults(food.data);\n    });\n    searchRef.current.value = '';\n    setSearchResults([]);\n  }\n  function inputBreakfast(foodData) {\n    axios.post('http://localhost:4000/api/food', {\n      user_id: userId,\n      meal_time: meal_time,\n      food: foodData.food_name,\n      food_type: foodData.food_type,\n      serving_size: foodData.serving_size,\n      kcl: foodData.kcal,\n      carbo: foodData.carbo,\n      protein: foodData.protein,\n      fat: foodData.fat,\n      date: today\n    }).then(() => {\n      alert('식사가 등록되었습니다.');\n      nav(-1);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: today\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: searchFood,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\uC74C\\uC2DD \\uAC80\\uC0C9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"search\",\n          ref: searchRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uAC80\\uC0C9\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 58\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 13\n    }, this), searchResults.length > 0 && /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: searchResults.map(food => {\n        return /*#__PURE__*/_jsxDEV(\"li\", {\n          className: styles.food_list,\n          children: [\"\\uC2DD\\uD488\\uBA85:\", food.food_name, \",\\uC2DD\\uD488\\uC885\\uB958:\", food.food_type, \",\\uCE7C\\uB85C\\uB9AC:\", food.kcal, \"kcal,\\uB2E8\\uBC31\\uC9C8:\", food.protein, \"g,\", \"\", \", \\uC9C0\\uBC29:\", food.fat, \"g,\\uD0C4\\uC218\\uD654\\uBB3C:\", food.carbo, \"g,\\uC81C\\uACF5\\uB7C9:\", food.serving_size, \"g \", /*#__PURE__*/_jsxDEV(\"button\", {\n            onClick: () => inputBreakfast(food),\n            children: \"\\uB4F1\\uB85D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 96\n          }, this)]\n        }, food.food_name, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 33\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 9\n  }, this);\n}\n_s(Food, \"kaDxZeE/LoE1ZOBBAwSLus72EFs=\", false, function () {\n  return [useNavigate, useParams];\n});\n_c = Food;\nvar _c;\n$RefreshReg$(_c, \"Food\");","map":{"version":3,"names":["axios","useEffect","useRef","useState","useNavigate","useParams","styles","jsxDEV","_jsxDEV","Food","_s","searchResults","setSearchResults","nav","meal_time","searchRef","foodRef","gRef","kclRef","carboRef","proteinRef","fatRef","userId","localStorage","getItem","today","setToday","timeId","setInterval","Date","toLocaleDateString","year","month","day","replace","pop","clearInterval","searchFood","e","preventDefault","post","search","current","value","then","food","console","log","data","inputBreakfast","foodData","user_id","food_name","food_type","serving_size","kcl","kcal","carbo","protein","fat","date","alert","catch","err","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","ref","length","map","className","food_list","onClick","_c","$RefreshReg$"],"sources":["/Users/ohyeongseog/Desktop/HealthMangement/Client/client/src/component/Food.js"],"sourcesContent":["import axios from \"axios\";\nimport { useEffect, useRef, useState } from \"react\";\nimport { useNavigate, useParams } from \"react-router-dom\";\nimport styles from \"../food.module.css\";\n\nexport default function Food()\n{\n    const [searchResults,setSearchResults] = useState([]);\n    const nav = useNavigate();\n    const {meal_time} = useParams();\n    const searchRef = useRef(null);\n    const foodRef = useRef(null);\n    const gRef = useRef(null);\n    const kclRef = useRef(null);\n    const carboRef = useRef(null);\n    const proteinRef = useRef(null);\n    const fatRef = useRef(null);\n    const userId=localStorage.getItem('userId');\n    const [today,setToday] = useState('');\n\n    useEffect(()=>{\n        const timeId = setInterval(()=>{\n            setToday(new Date().toLocaleDateString('ko-KR',{year:'numeric',month:'2-digit',day:'2-digit'}).replace(/\\./g,'-').pop());\n        },1000);\n        return (()=> clearInterval(timeId));\n    },[]);\n\n    function searchFood(e)\n    {\n        e.preventDefault();\n        axios.post('http://localhost:4000/api/food_search',{\n            search:'%'+searchRef.current.value+'%'\n        }).then((food)=>{\n            console.log(food);\n            \n            setSearchResults(food.data);\n        });\n        searchRef.current.value ='';\n        setSearchResults([]);\n    }\n    function inputBreakfast(foodData)\n    {\n        axios.post('http://localhost:4000/api/food',{\n            user_id:userId,\n            meal_time:meal_time,\n            food:foodData.food_name,\n            food_type:foodData.food_type,\n            serving_size:foodData.serving_size,\n            kcl:foodData.kcal,\n            carbo:foodData.carbo,\n            protein:foodData.protein,   \n            fat:foodData.fat,\n            date:today \n        }).then(()=>{\n            alert('식사가 등록되었습니다.');\n            nav(-1);\n        }).catch((err)=>\n        {\n            console.log(err);\n        }\n        )\n    }\n    return(\n\n        <div>\n            <p>{today}</p>\n            <form onSubmit={searchFood}>\n                <label>음식 검색</label>\n                <p><input type=\"search\" ref={searchRef}/><button>검색</button></p>\n            </form>\n            {\n                searchResults.length>0 &&(\n                    <ul>\n                        {searchResults.map((food)=>{\n                            return(\n                                <li className={styles.food_list} key={food.food_name}>\n                                    식품명:{food.food_name},식품종류:{food.food_type},칼로리:{food.kcal}kcal,단백질:{food.protein}g,{\"\"},\n                                    지방:{food.fat}g,탄수화물:{food.carbo}g,제공량:{food.serving_size}g <button onClick={()=>inputBreakfast(food)}>등록</button>\n                                </li>\n                            )\n                        })} \n                    </ul>\n                )}\n        </div>\n    );\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}